version: 2

references:
  workspace: &workspace
    ~/src
  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m"'
  ruby_dependencies: &ruby_dependencies
    run:
      name: Download Ruby Dependencies
      command: bundle check || bundle update && bundle install --path vendor/bundle

  android_dependencies: &android_dependencies
    run:
      name: Download Android Dependencies
      command: ./gradlew androidDependencies
  gradle_key: &gradle_key
    jars-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

  gems_key: &gems_key
    gems-{{ checksum "Gemfile.lock" }}

  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      key: *gradle_key

  restore_gems_cache: &restore_gems_cache
    restore_cache:
      key: *gems_key

  save_gradle_cache: &save_gradle_cache
    save_cache:
      key: *gradle_key
      paths:
        - ~/.gradle
        - ~/.m2

  save_gems_cache: &save_gems_cache
    save_cache:
      key: *gems_key
      paths:
        - vendor/bundle

jobs:
  test_unit:
    <<: *android_config
    steps:
        - checkout
        - *restore_gradle_cache
        - *restore_gems_cache
        - *ruby_dependencies
        - *android_dependencies
        - *save_gradle_cache
        - *save_gems_cache
        - run:
            name: Run unit tests
            command: bundle exec fastlane android test
        - store_artifacts:
            path: firestorelivedata/build/reports/
            destination: /reports/
        - store_test_results:
            path: app/build/test-results/
            destination: /test-results/

workflows:
  version: 2
  workflow:
    jobs:
        - test_unit